//
// Generated file, do not edit! Created by nedtool 5.4 from messages/start_offset.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __START_OFFSET_M_H
#define __START_OFFSET_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0504
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>messages/start_offset.msg:1</tt> by nedtool.
 * <pre>
 * message Start_Offset
 * {
 *     int offset;
 * }
 * </pre>
 */
class Start_Offset : public ::omnetpp::cMessage
{
  protected:
    int offset;

  private:
    void copy(const Start_Offset& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const Start_Offset&);

  public:
    Start_Offset(const char *name=nullptr, short kind=0);
    Start_Offset(const Start_Offset& other);
    virtual ~Start_Offset();
    Start_Offset& operator=(const Start_Offset& other);
    virtual Start_Offset *dup() const override {return new Start_Offset(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getOffset() const;
    virtual void setOffset(int offset);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const Start_Offset& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, Start_Offset& obj) {obj.parsimUnpack(b);}


#endif // ifndef __START_OFFSET_M_H

